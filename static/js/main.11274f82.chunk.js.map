{"version":3,"sources":["clock.ts","sound.ts","App.tsx","index.tsx"],"names":["clock","delta","currentTime","intervalId","prevTime","subscribers","Set","s","this","add","delete","performance","now","window","setInterval","tick","clearInterval","cb","t","currTime","Math","floor","forEach","Sound","a1","document","querySelector","a15","a60","audios","addListener","a","pause","play","start","sound","settings","time","s60","s15","s1","twoDigits","App","useState","setTime","going","setGoing","setDelta","maxTime","setMaxTime","useEffect","listener","setting","stop_","removeListener","input","useRef","useCallback","current","Number","value","stop","secs","mins","ss","mm","className","type","ref","defaultValue","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11274f82.chunk.js","sourcesContent":["export type Subscriber = (seconds: number) => void;\n\nexport class Clock {\n    currentTime: number = 0;\n    private intervalId = 0;\n    private prevTime = 0;\n    private subscribers: Set<Subscriber> = new Set();\n    constructor(private delta = 1000) {\n\n    }\n    addListener(s: Subscriber) {\n        this.subscribers.add(s);\n    }\n    removeListener(s: Subscriber) {\n        this.subscribers.delete(s);\n    }\n    start() {\n       this.prevTime = performance.now();\n       this.intervalId = window.setInterval(() => this.tick(), this.delta / 10); \n    }\n    stop() {\n        this.currentTime = 0;\n        window.clearInterval(this.intervalId);\n        this.intervalId = 0;\n    }\n    nextTick(cb: Subscriber) {\n        this.subscribers.add((t) => {\n            cb(t);\n            this.subscribers.delete(cb);\n        })\n    }\n    private tick() {\n        const currTime = performance.now();\n        const delta = currTime - this.prevTime;\n        if (delta > this.delta) {\n            this.currentTime += Math.floor(delta / this.delta);\n            this.subscribers.forEach(s => s(this.currentTime));\n            this.prevTime = currTime;\n        }\n    }\n}\nexport const clock = new Clock();","import { Clock } from \"./clock\";\n\nexport class Sound {\n    private a1 = document.querySelector('#a1') as HTMLAudioElement;\n    private a15 = document.querySelector('#a15') as HTMLAudioElement;\n    private a60 = document.querySelector('#a60') as HTMLAudioElement;\n    constructor(private clock: Clock) {\n        this.clock.addListener(() => this.tick());\n    }\n    private audios: HTMLAudioElement[] = [this.a1, this.a15, this.a60];\n    private tick() {\n        this.audios.forEach(a => {\n            a.pause();\n        });\n    }\n    s1() {\n        play(this.a1);\n    }\n    s15(){\n        play(this.a15);\n    }\n    s60(){\n        play(this.a60);\n    }\n}\nfunction play(a: HTMLAudioElement) {\n    a.currentTime = 0;\n    a.play();\n}","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport './App.css';\nimport {clock} from './clock';\nimport {Sound} from './sound';\nclock.start();\nconst sound = new Sound(clock);\n\nconst settings = [\n  {time: 60, cb: () => sound.s60()},\n  {time: 15, cb: () => sound.s15()},\n  {time: 1, cb: () => sound.s1()}\n]\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [going, setGoing] = useState(false);\n  const [delta, setDelta] = useState(0);\n  const [maxTime, setMaxTime] = useState(0);\n  useEffect(() => {\n    const listener = (time: number) => {\n      const t = time - delta;\n      if (!going) return;\n      setTime(t);\n      for (let setting of settings) {\n        if (t % setting.time === 0) {\n          setting.cb();\n          break;\n        }\n      }\n      if (t >= maxTime && maxTime !== 0) stop_();\n    }\n    clock.addListener(listener);\n    return () => clock.removeListener(listener);\n  }, [setTime, going, delta, maxTime]);\n\n  const input = useRef<HTMLInputElement>(null);\n  const start = useCallback(start_, [setGoing, setDelta, input]);\n  const stop = useCallback(stop_, [setGoing, setTime]);\n  const secs = time % 60;\n  const mins = (time - secs) / 60;\n  const ss = twoDigits(secs);\n  const mm = twoDigits(mins);\n  return (\n    <div>\n      <div className=\"timer-face\">\n        <h1>{mm}:{ss}</h1>\n      </div>\n      <div className=\"buttons\">\n        {going  \n          ? <input type=\"number\" value={maxTime - time} />\n          : <input type=\"number\" ref={input} defaultValue=\"0\"/>\n        }\n        <button onClick={start}>Start</button>\n        <button onClick={stop}>Stop</button>\n      </div>\n    </div>\n  );\n  function start_() {\n    setGoing(true);\n    setDelta(clock.currentTime);\n    if (input.current) {\n      setMaxTime(Number(input.current.value));\n    }\n  }\n  function stop_() {\n    setGoing(false);\n    setTime(0);\n  }\n}\nfunction twoDigits(t: number): string {\n  if (t < 10) {\n    return '0' + t;\n  } else {\n    return '' + t;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}